import { AbstractIframe } from './abstract/AbstractIframe';
import { IframeEvent } from './windowPostMessage';
import { ROUTER_MODE } from '../consts';
export declare class ShareTargetPickerIFrame extends AbstractIframe {
    protected routerMode: ROUTER_MODE;
    protected submittedData: boolean | {};
    private wrapperIn;
    private originalBodyStyle;
    private orgDocumentStyle;
    private originalBodyPos;
    private allowPostMessageOrigin;
    constructor(url: string, accessToken: string, namespace?: Window);
    init(routerMode?: ROUTER_MODE): Promise<void>;
    protected prepareDom(): HTMLElement;
    protected prepareStyle(): HTMLStyleElement;
    cancel(): Promise<void>;
    submit(): Promise<void>;
    destroy(): Promise<void>;
    protected changeBodyStyle(): void;
    protected revertBodyStyle(): void;
    private filter;
    postMessageCallback(e: IframeEvent): Promise<void>;
    /**
     * TODO こいつらの処遇は後で決める
     */
    protected historyAdd(): Promise<void>;
    protected startWatchingHistoryChange(): void;
    protected historyRemove(): void;
}
